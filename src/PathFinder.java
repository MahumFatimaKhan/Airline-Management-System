
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Acer
 */
public class PathFinder extends javax.swing.JFrame implements objects {

   
    /**
     * Creates new form PathFinder
     */
    public PathFinder() {
        initComponents();
    }
 
   Graph g = new Graph(8); 
//Reading the entire shortest path file
    public void read() {
        try {
            File file = new File("ShortestPath.txt");
            Scanner reader = new Scanner(file);
            reader.nextLine();
            while (reader.hasNextLine()) {
                String data = reader.nextLine();
                //nameofVertex,indexOfVertex,nameofVertex,indexOfvertex,distance
                String[] split = data.split(",");
                Vertex v = new Vertex(split[0], Integer.parseInt(split[1]));  //creating a vertex with its name, index
                g.addVertex(v); //adding the vertex in the graph
                int edge = Integer.parseInt(split[3]); //index of edge of Vertex
                double distanceBetweenEdges = Double.parseDouble(split[4]); //distance of edge between origin and destination
                g.addEdge(Integer.parseInt(split[1]), edge, distanceBetweenEdges); //adding edge to the graph (e1,e2,dist)
            }
        } catch (FileNotFoundException ex) {

        }
    }
    
    public void Finder(String Origin,String Dest){
        String start = Origin;
        String end = Dest;
        PathFinder f = new PathFinder();
        f.read();
        String ourText=""; //to display all paths
        String ourText1=""; //to display shortest path
        int countForShow=1; //to show how many paths we found
        Vertex[] VerticesArray = Graph.getVerticesArray(); 
        //then finding every possible path from source to dest through method allPaths
        ArrayList<Linkedlist> pathsArrList = f.g.allPaths(start, end);   //arraylist of type linked list
        
        for (int i = 0; i < pathsArrList.size(); i++) { 
          node temp = pathsArrList.get(i).head; //ith list's head node 
            ourText+= "•   "; 
           // countForShow++; 
            while (temp != null) { 
                ourText+=(VerticesArray[temp.v].getName() + "    "); //using index number of Array of objects Vertices to display name
                temp = temp.next;   
            }
            
            ourText+=("\n Distance: " + pathsArrList.get(i).distance); //path distance
            ourText+=("\n"); 
        }
        
        //to traverse shortest path:
        node temp2 = pathsArrList.get(Graph.getShortestP()).head;  //getting head of the shortest path link list 
        while (temp2 != null) { 
            ourText1+=(VerticesArray[temp2.v].getName() + "    "); 
            temp2 = temp2.next;
        }
        Display.setText(ourText);
        ShortestDisplay.setText(ourText1);
        ShortestDistance.setText("Shortest Distance: " + Graph.getminD());
        
    }    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Display = new javax.swing.JTextArea();
        back = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ShortestDisplay = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ShortestDistance = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Sitka Text", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("All Possible Routes");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, -1, -1));

        Display.setEditable(false);
        Display.setColumns(20);
        Display.setFont(new java.awt.Font("Sitka Text", 0, 12)); // NOI18N
        Display.setForeground(new java.awt.Color(162, 118, 141));
        Display.setRows(5);
        Display.setOpaque(false);
        jScrollPane1.setViewportView(Display);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 440, 150));

        back.setBackground(new java.awt.Color(204, 204, 204));
        back.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        back.setForeground(new java.awt.Color(162, 118, 141));
        back.setText("←");
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 60));

        jLabel3.setFont(new java.awt.Font("Sitka Text", 0, 32)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("CONNECTING FLIGHTS ROUTE");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        ShortestDisplay.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        ShortestDisplay.setForeground(new java.awt.Color(255, 255, 255));
        ShortestDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(ShortestDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 420, 30));

        jLabel6.setFont(new java.awt.Font("Sitka Text", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Shortest Route");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, -1, -1));

        ShortestDistance.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        ShortestDistance.setForeground(new java.awt.Color(255, 255, 255));
        ShortestDistance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(ShortestDistance, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 420, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images.jpeg (1).jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 410));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        dispose();
        stack.CheckStack(stack.pop().toString());
        f1.setLocationRelativeTo(null);
        f1.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PathFinder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PathFinder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PathFinder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PathFinder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PathFinder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Display;
    private javax.swing.JLabel ShortestDisplay;
    private javax.swing.JLabel ShortestDistance;
    private javax.swing.JButton back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
